{"version":3,"sources":["components/Api/Api.jsx","components/Searchbar/Searchbar.jsx","components/ImageGallery/ImageGallery.jsx","components/ImageGalleryItem/ImageGalleryItem.jsx","components/Button/Button.jsx","components/Loader/index.jsx","components/Modal/Modal.jsx","App.jsx","index.js"],"names":["axios","defaults","baseURL","Api","query","page","get","then","data","Searchbar","onSubmit","useState","input","setInput","className","e","preventDefault","type","value","onChange","target","autoComplete","autoFocus","placeholder","ImageGallery","children","ImageGalleryItem","webformatURL","tags","largeImageURL","onClickImg","onClick","src","alt","data-largeurl","Button","onClickBtn","App","color","height","width","React","Component","Modal","largeurl","onOverlay","escFunctionModal","useEffect","document","addEventListener","removeEventListener","mounted","setMounted","imgs","setImgs","setQuery","setPage","isLoading","setIsLoading","modalRoot","getElementById","dataset","ReactDOM","render","closeModalOverlay","currentTarget","unmountComponentAtNode","keyCode","prevImgs","hits","finally","window","scrollTo","top","documentElement","scrollHeight","behavior","map","id","length","prevPage","StrictMode"],"mappings":"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","file":"static/js/main.30d006ad.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst apikey = '19742000-8f2cd71a75112bf6e0b5f6064';\n\naxios.defaults.baseURL = 'https://pixabay.com/api';\n\nconst Api = (query, page) =>\n  axios\n    .get(\n      `/?q=${query}&page=${page}&key=${apikey}&image_type=photo&orientation=horizontal&per_page=12`,\n    )\n    .then(({ data }) => data);\n\nexport default Api;\n","import React, { useState } from 'react';\n\nfunction Searchbar({ onSubmit }) {\n  const [input, setInput] = useState('');\n\n  function inputHandler({ target: { value } }) {\n    setInput(value);\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    onSubmit(input);\n  }\n\n  return (\n    <header className=\"Searchbar\">\n      <form className=\"SearchForm\" onSubmit={handleSubmit}>\n        <button type=\"submit\" className=\"SearchForm-button\">\n          <span className=\"SearchForm-button-label\">Search</span>\n        </button>\n        <input\n          className=\"SearchForm-input\"\n          type=\"text\"\n          value={input}\n          onChange={inputHandler}\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search images and photos\"\n        />\n      </form>\n    </header>\n  );\n}\n\nexport default Searchbar;\n","import React from 'react';\n\nfunction ImageGallery({ children }) {\n  return <ul className=\"ImageGallery\">{children}</ul>;\n}\n\nexport default ImageGallery;\n","import React from 'react';\n\nfunction ImageGalleryItem({ webformatURL, tags, largeImageURL, onClickImg }) {\n  return (\n    <>\n      <li className=\"ImageGalleryItem\">\n        <img\n          onClick={onClickImg}\n          src={webformatURL}\n          alt={tags}\n          className=\"ImageGalleryItem-image\"\n          data-largeurl={largeImageURL}\n        />\n      </li>\n    </>\n  );\n}\n\nexport default ImageGalleryItem;\n","import React from 'react';\n\nfunction Button({ onClickBtn }) {\n  function onClickHandler() {\n    onClickBtn();\n  }\n\n  return (\n    <button className=\"Button\" onClick={onClickHandler}>\n      Load more\n    </button>\n  );\n}\n\nexport default Button;\n","import React from 'react';\n\nimport Loader from 'react-loader-spinner';\nexport default class App extends React.Component {\n  render() {\n    return (\n      <Loader\n        className=\"Loader\"\n        type=\"ThreeDots\"\n        color=\"#00BFFF\"\n        height={80}\n        width={80}\n        // timeout={3000} //3 secs\n      />\n    );\n  }\n}\n","import React, { useEffect } from 'react';\n\nfunction Modal({ largeurl, alt, onOverlay, escFunctionModal }) {\n  useEffect(() => {\n    document.addEventListener('keydown', escFunctionModal, false);\n\n    return () => {\n      document.removeEventListener('keydown', escFunctionModal, false);\n    };\n  }, []);\n\n  return (\n    <div className=\"Overlay\" onClick={onOverlay}>\n      <div className=\"Modal\">\n        <img src={largeurl} alt={alt} />\n      </div>\n    </div>\n  );\n}\n\nexport default Modal;\n","import React, { useState, useEffect } from 'react';\nimport ReactDOM from 'react-dom';\nimport Api from './components/Api';\nimport Searchbar from './components/Searchbar';\nimport ImageGallery from './components/ImageGallery';\nimport ImageGalleryItem from './components/ImageGalleryItem';\nimport Button from './components/Button';\nimport Loader from './components/Loader';\nimport Modal from './components/Modal';\nimport './index.css';\n\nfunction App() {\n  const [mounted, setMounted] = useState(false); // что бы useEffect не срабатывал при первом рендере\n\n  const [imgs, setImgs] = useState([]); // массив картинок\n\n  const [query, setQuery] = useState(''); //поисковый запрос\n\n  const [page, setPage] = useState(1); //номер страници\n\n  const [isLoading, setIsLoading] = useState(false); // лодырь\n\n  const modalRoot = document.getElementById('modal-root');\n\n  useEffect(() => {\n    if (!mounted) return setMounted(true);\n    setIsLoading(true);\n    Api(query, page)\n      .then(data => {\n        setImgs(prevImgs => [...prevImgs, ...data.hits]);\n      })\n      .finally(() => {\n        setIsLoading(false);\n        scroll();\n      });\n  }, [query, page]);\n\n  //чистим стейты при изменении поискового запроса\n  useEffect(() => {\n    setImgs([]);\n    setPage(1);\n  }, [query]);\n\n  function onSubmit(input) {\n    setQuery(input);\n  }\n\n  function onClickBtn() {\n    setPage(prevPage => (prevPage += 1));\n  }\n\n  function onClickImg(e) {\n    const alt = e.target.alt;\n    const largeurl = e.target.dataset.largeurl;\n    ReactDOM.render(\n      <Modal\n        largeurl={largeurl}\n        alt={alt}\n        onOverlay={closeModalOverlay}\n        escFunctionModal={escFunctionModal}\n      />,\n      modalRoot,\n    );\n  }\n\n  function closeModalOverlay(e) {\n    if (e.target === e.currentTarget) {\n      ReactDOM.unmountComponentAtNode(modalRoot);\n    }\n  }\n\n  function escFunctionModal(e) {\n    if (e.keyCode === 27) {\n      ReactDOM.unmountComponentAtNode(modalRoot);\n    }\n  }\n\n  function scroll() {\n    window.scrollTo({\n      top: document.documentElement.scrollHeight,\n      behavior: 'smooth',\n    });\n  }\n\n  return (\n    <>\n      <Searchbar onSubmit={onSubmit} />\n      {isLoading && <Loader />}\n      <ImageGallery>\n        {imgs.map(({ id, webformatURL, tags, largeImageURL }) => (\n          <ImageGalleryItem\n            key={id}\n            webformatURL={webformatURL}\n            tags={tags}\n            largeImageURL={largeImageURL}\n            onClickImg={onClickImg}\n          />\n        ))}\n      </ImageGallery>\n      {!!imgs.length && <Button onClickBtn={onClickBtn} />}\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}